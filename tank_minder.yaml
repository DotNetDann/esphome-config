# ------------------------------
# ---- Implemented on Sonoff Dual R2 inside housing of external water tank ----
# ------------------------------
#GPIO0	Button 0 on header                NOT USED
#GPIO3	Serial Rx and Optional Sensor
#GPIO1	Serial Tx and Optional Sensor
#GPIO5	Relay 2 (RED LED)
#GPIO9	Button 1 on header
#GPIO10	Button on Case
#GPIO12	Relay 1 (GREEN LED)
#GPIO13	Blue Led (Inverted)

# GND GPIO1  GPIO3  3.3v  GPIO0  GPIO9 GPIO10  GPIO13  NA  NA  NA  5v

substitutions:
  devicename: tank_minder

esphome:
  name: ${devicename}
  platform: ESP8266
  board: esp01_1m

wifi:
  #power_save_mode: light # power reduced from ?.?w to ?.?w
  #fast_connect: true
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
    hidden: True
  manual_ip:
    static_ip: !secret ip_tank_minder
    gateway: !secret ip_gateway
    subnet: 255.255.255.0
  domain: .homelan
  ap: # Enable fallback hotspot (captive portal) in case wifi connection fails
    ssid: "${devicename} Hotspot"
    password: !secret password

captive_portal:

#mqtt:
#  broker: !secret mqtt_host
#  username: !secret mqtt_username
#  password: !secret mqtt_password
#  reboot_timeout: 0s # Dont reboot..

# Enable logging
logger:
  baud_rate: 0 # So we can use the RX and TX pins

# Enable Home Assistant API
api:
  password: !secret password
  reboot_timeout: 0s # Dont reboot..

ota:
  password: !secret password

web_server:
  port: 80
  auth:
    username: admin
    password: !secret password


i2c:
  sda: GPIO3
  scl: GPIO1
  id: bus_a
  scan: True

ads1115: #https://esphome.io/components/sensor/ads1115.html
  - address: 0x48

dallas:
  - pin: GPIO9

# Used a '5V DC Pressure Transducer Sensor 0-1.2 MPa Oil Fuel Diesel Gas Water Air' = 174psi - 60PSI would prbably be ok but use a 100PSI just in case
# https://bluerobotics.com/learn/pressure-depth-calculator/
sensor:
  - platform: ads1115
    id: adclevel
    multiplexer: 'A0_GND'
#    gain: 6.144 #(measures up to 6.144V)
#    gain: 4.096 #(measures up to 4.096V) # Full hose pressure is around 3.1v (100PSI)
#    gain: 2.048 #(measures up to 2.048V) # Full hose pressure is just shy of 2v (1.2MPa -> 174PSI)
    gain: 1.024 #(measures up to 1.024V)
#    gain: 0.512 #(measures up to 0.512V)
#    gain: 0.256 #(measures up to 0.256V)
    name: ${devicename} Level
    icon: "mdi:cup-water"
    accuracy_decimals: 0
    unit_of_measurement: "L"
#    update_interval: 2min
    update_interval: 30s
    filters:
    - calibrate_linear: # https://esphome.io/components/sensor/index.html#sensor-filters
#      - 0.490 -> 0.0 # Empty Value     (100PSI)
#      - 0.848 -> 3000.0 # Full Value   (100PSI)
      - 0.490 -> 0.0 # Empty Value     (1.2MPa)
      - 0.566 -> 3000.0 # Full Value   (1.2MPa)
#      - 0.579 -> 3000.0 # Full Value   (1.2MPa)
    - median:
        window_size: 10
        send_every: 5

  - platform: template
    name: ${devicename} Status
    update_interval: 1min
    unit_of_measurement: '%'
    icon: "mdi:water-percent"
    accuracy_decimals: 0
    lambda: |-
      return ((id(adclevel).state / 3000) * 100.00);

  - platform: dallas
    address: 0xDE3C01D607548128
    name: ${devicename} Temperature


binary_sensor:
#  - platform: gpio
#    pin:
#      number: GPIO0
#      mode: INPUT_PULLUP
#      inverted: True
#    name: GPIO0    

#  - platform: gpio
#    pin:
#      number: GPIO9
#      mode: INPUT_PULLUP
#      inverted: True
#    name: "GPIO9"
#
  - platform: gpio
    pin:
      number: GPIO10 # Case Button
      mode: INPUT_PULLUP
#      inverted: True
    name: ${devicename} Button
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      - switch.toggle: relay1


switch:
  - platform: gpio
#    name: "Water Tank Relay 1" # Green Led
    name: ${devicename} Spare
    pin: GPIO12
    id: relay1
  - platform: gpio
#    name: "Water Tank Relay 2" # Red Led
    name: ${devicename} Pump
    pin: GPIO5
    id: relay2


status_led:
  pin:
    number: GPIO13
    inverted: yes
