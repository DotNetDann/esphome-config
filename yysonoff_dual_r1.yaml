# ------------------------------
# ---- Sonoff Dual R1 ----
# ------------------------------

# NOTE: THIS ONE HAS NO REAL IO!!!
# RELAYS ARE VIA SERIAL TO A CHIP
# Example: https://esphome.io/cookbook/sonoff-dual-light-switch.html


# GND GPIO1  GPIO3  3.3v  GPIO0  5v

substitutions:
  devicename: sonoff_dual_r1

esphome:
  name: ${devicename}
  platform: ESP8266
  board: esp01_1m

wifi:
  #power_save_mode: light # power reduced from ?.?w to ?.?w
  #fast_connect: true
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
    hidden: True
  manual_ip:
    static_ip: !secret ip_tank_minder
    gateway: !secret ip_gateway
    subnet: 255.255.255.0
  domain: .homelan
  ap: # Enable fallback hotspot (captive portal) in case wifi connection fails
    ssid: "${devicename} Hotspot"
    password: !secret password

captive_portal:

#mqtt:
#  broker: !secret mqtt_host
#  username: !secret mqtt_username
#  password: !secret mqtt_password
#  reboot_timeout: 0s # Dont reboot..

# Enable logging
logger:
  baud_rate: 0 # So we can use the RX and TX pins

# Enable Home Assistant API
api:
  password: !secret password
  reboot_timeout: 0s # Dont reboot..

ota:
  password: !secret password

web_server:
  port: 80
  auth:
    username: admin
    password: !secret password



uart:
  tx_pin: GPIO01
  rx_pin: GPIO03
  baud_rate: 19200

switch:
  - platform: template
    id: relay_1
    turn_on_action:
      if:
        condition:
          switch.is_off: relay_2
        then:
          - uart.write: [0xA0, 0x04, 0x01, 0xA1]
        else:
          - uart.write: [0xA0, 0x04, 0x03, 0xA1]
    turn_off_action:
      if:
        condition:
          switch.is_off: relay_2
        then:
          - uart.write: [0xA0, 0x04, 0x00, 0xA1]
        else:
          - uart.write: [0xA0, 0x04, 0x02, 0xA1]
    optimistic: true

  - platform: template
    id: relay_2
    turn_on_action:
      if:
        condition:
          switch.is_off: relay_1
        then:
          - uart.write: [0xA0, 0x04, 0x02, 0xA1]
        else:
          - uart.write: [0xA0, 0x04, 0x03, 0xA1]
    turn_off_action:
      if:
        condition:
          switch.is_off: relay_1
        then:
          - uart.write: [0xA0, 0x04, 0x00, 0xA1]
        else:
          - uart.write: [0xA0, 0x04, 0x01, 0xA1]
    optimistic: true

binary_sensor:
  - platform: gpio
    name: GPIO4
    pin:
      number: GPIO4
      mode: INPUT_PULLUP
      inverted: true
#    id: button_1
#    on_press:
#      then:
#        - light.toggle: light_1

  - platform: gpio
    name: GPIO14
    pin:
      number: GPIO14
      mode: INPUT_PULLUP
      inverted: true
#    id: button_2
#    on_press:
#      then:
#        - light.toggle: light_2



output:
  - platform: template
    type: binary
    id: out_1
    write_action:
      if:
        condition:
          light.is_on: light_1
        then:
          - switch.turn_on: relay_1
        else:
          - switch.turn_off: relay_1

  - platform: template
    type: binary
    id: out_2
    write_action:
      if:
        condition:
          light.is_on: light_2
        then:
          - switch.turn_on: relay_2
        else:
          - switch.turn_off: relay_2

light:
  - platform: binary
    name: "Dual L1"
    id: light_1
    output: out_1

  - platform: binary
    name: "Dual L2"
    id: light_2
    output: out_2
    
    




status_led:
  pin:
    number: GPIO13
    inverted: yes